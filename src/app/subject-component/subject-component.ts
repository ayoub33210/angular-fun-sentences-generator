import { Component, EventEmitter, Input, Output } from '@angular/core';
import { MonService } from '../services/mon-service';

@Component({
  selector: 'app-subject-component',
  standalone: true,
  templateUrl: './subject-component.html', // ðŸ”¹ template de lâ€™enfant
  styleUrls: ['./subject-component.css'], // ðŸ”¹ styles de lâ€™enfant
})
export class SubjectComponent {
  // âœ… Input : permet au parent de passer une liste de sujets personnalisÃ©s
  @Input() subject_list = [
    'Le bÃ©bÃ© dÃ©mon',
    'Le clown meurtrier',
    'Le chien cannibale',
    'Le prÃªtre voleur',
    'Le prof sadique',
    'Le politicien zombie',
    'Le pape gangster',
    'Le fÅ“tus rÃ¢leur',
    'Lâ€™ange pervers',
    'Le PÃ¨re NoÃ«l toxico',
    'La sorciÃ¨re ivrogne',
    'Le hamster psychopathe',
    'La licorne bipolaire',
    'Le pirate sÃ©nile',
    'Le dentiste sadique',
    'La mouche radioactive',
    'Le serveur schizophrÃ¨ne',
    'Le singe pyromane',
    'La grenouille vulgaire',
    'Le vampire obÃ¨se',
  ];

  // âœ… Output : permet Ã  lâ€™enfant dâ€™envoyer un message au parent
  @Output() subject_parent = new EventEmitter<string>();
  constructor(private monService: MonService) {}
  ngOnInit(): void {
    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.
    //Add 'implements OnInit' to the class.
  }
  sendSubject() {
    // const idx = this.monService.getRandomIndex(this.subject_word.length);
    // const chosen = this.subject_word[idx];
    // ðŸ”¹ Ã©met le sujet choisi vers le parent
    this.subject_parent.emit(
      this.subject_list[this.monService.getRandomIndex(this.subject_list.length)]
    );
  }
}
